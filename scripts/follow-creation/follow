#!/bin/bash
export THIS_SCRIPT_DIRECTORY=$(dirname $0)
export PATH=${PATH}:${THIS_SCRIPT_DIRECTORY}

ENVIRONMENT_ID="$1"

CACHE_FILE=$(mktemp)

# Resource Group
while ! resource-groups "${ENVIRONMENT_ID?}"; do
  sleep 10; clear
done

echo ""

# AKS
while ! aks "wasp-${ENVIRONMENT_ID?}"; do
  sleep 30; clear
done

echo ""

# Namespaces
while ! namespaces; do
  sleep 10; clear
done

echo ""

# external-secrets ClusterSecretStore
while ! external-secrets-secret-store; do
  sleep 10; clear
done

echo ""

# external-secrets ExternalSecret
while ! external-secrets; do
  sleep 10; clear
done

echo ""

# argo-cd DNS check
DNS_CHECK_COUNT=0
DNS_CHECK_SUCCESS_COUNT=0

echo "argo-cd check DNS"
echo ""

while [ "${DNS_CHECK_SUCCESS_COUNT}" -lt 3 ]; do
  ARGOCD_HOST=$(argocd-check-dns)

  if [ "$?" == "0" ]; then
    DNS_CHECK_SUCCESS_COUNT=$((${DNS_CHECK_SUCCESS_COUNT} + 1))
  fi

  DNS_CHECK_COUNT=$((${DNS_CHECK_COUNT} + 1))

  echo "dig ${ARGOCD_HOST?} [SUCCESS: ${DNS_CHECK_SUCCESS_COUNT}/${DNS_CHECK_COUNT}]"

  sleep 10;
done

echo ""

# argo-cd curl check
DNS_CHECK_COUNT=0
DNS_CHECK_SUCCESS_COUNT=0

echo "argo-cd curl check"
echo ""

while [ "${DNS_CHECK_SUCCESS_COUNT}" -lt 3 ]; do
  ARGOCD_HOST=$(argocd-check-curl)

  if [ "$?" == "0" ]; then
    DNS_CHECK_SUCCESS_COUNT=$((${DNS_CHECK_SUCCESS_COUNT} + 1))
  fi

  DNS_CHECK_COUNT=$((${DNS_CHECK_COUNT} + 1))

  echo "curl https://${ARGOCD_HOST?} [SUCCESS: ${DNS_CHECK_SUCCESS_COUNT}/${DNS_CHECK_COUNT}]"

  sleep 10;
done

echo ""
